=define_helper_functions

%section#pareto_charts_form.panel.radius.analysis-chart
  %a.close-reveal-modal &#215
  %h3.subheader="Pareto chart"

  .row
    .small-5.columns
      %label.inline="Select output parameter"
    .small-7.columns
      %select(class="moe_info_list" id ="outputParam")

  .row
    %ul.inline-list
      %li
        %button.refresh Refresh moes
      %li
        %button.radius Load chart
      %li
        %img(src="#{image_url("loading.gif")}" id='busy_pareto' class='loading_chart_gif' size='16x16' style='display: none' )




.charts
  .scripts

:javascript

  $(function(){

    /* function from global variable moes_info_json create html selectbox with moe values and then replacing exiting values with new ones */
    window.reload_pareto_params = function(){
      $("#busy_pareto").show();
      reload_selectbox_parameters();
      $('#busy_pareto').hide();
    };
    reload_pareto_params();

    var pareto_chart_counter = 0;
    var load_chart = function() {
      var pareto_chart_div = $("<div id=\"pareto_chart_"+pareto_chart_counter+"\">")[0];
      $("#paretoModal .charts").prepend(pareto_chart_div);

      var parameters_ids = []
      var parameters_names = []


      for(var i = 0; i < window.moes_info_json.length; i++){
          var obj = window.moes_info_json[i];
          parameters_ids[i] = obj.id
          parameters_names[i] = obj.label
      }

      parameters_ids = escapeHtml(parameters_ids)
      parameters_names = escapeHtml(parameters_names)


      var outputParam = $("#paretoModal select#outputParam option:selected").val();
      var outputParam_label = $("#paretoModal select#outputParam option:selected").text();
      var index_of_moe = window.moes_info.moes_names.indexOf(outputParam)
      var type_of_moe = window.moes_info.moes_types[index_of_moe]
      outputParam = escapeHtml(outputParam);
      outputParam_label = escapeHtml(outputParam_label);

      if (type_of_moe == 'string') {
        toastr.error('Cannot plot for string type parameter - ' + outputParam_label);
        $("#busy_pareto").hide()
        return;
      }

      var query_params = "experiment_id=#{@experiment.id}";
      query_params += "&parameters_ids="+parameters_ids;
      query_params += "&parameters_names="+parameters_names;
      query_params += "&output_label="+outputParam_label;
      query_params += "&output="+outputParam;
      query_params += "&chart_id="+pareto_chart_counter;

      var url = "#{@prefix}/chart_instances/pareto?"+query_params;

      var handler = function(data) {
        $("#busy_pareto").hide();
        var targetOffset = $(pareto_chart_div).offset().top;
        $('html,body').animate({ scrollTop: targetOffset }, 1000);
        $(pareto_chart_div).html(data);
      };
      getWithSession(url, {}, handler, onErrorHandler);
      pareto_chart_counter++;

    };

    $("#paretoModal").find("button.refresh").bind("click", reload_pareto_params);

    $("#paretoModal").find("button.radius").bind("click", function() {
      $('#busy_pareto').show();
      load_chart();
      });

  });

