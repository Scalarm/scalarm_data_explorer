=define_helper_functions

- parameters = @experiment.get_parameter_ids

-# parameters_labels = parameters


- filter = {is_done: true, is_error: {'$exists'=> false}}
- fields = {fields: {result: 1}}
- result = @experiment.simulation_runs.where(filter, fields).first
- outputs=[]
- if result.blank?
  - outputs = ["No results found in completed simulation runs"]
- else
  - outputs = result.result.keys

%section#pareto_charts_form.panel.radius.analysis-chart
  %a.close-reveal-modal &#215
  %h3.subheader="Pareto chart"
  .row
    .small-5.columns
      %label.inline="Select output parameter"
    .small-7.columns
      %select(class="moe_info_list" id ="outputParam")
        -outputs.each do |output|
          %option{value:output} #{output}

  .row
    %ul.inline-list
      %li
        %button.refresh Refresh moes
      %li
        %button.radius Load chart
      %li
        %img(src="#{image_url("loading.gif")}" id='busy_pareto' class='loading_chart_gif' size='16x16' style='display: none' )




.charts
  .scripts

:javascript

  $(function(){

    /* function from global variable moes_info_json create html selectbox with moe values and then replacing exiting values with new ones */
    window.reload_pareto_params = function(){
      $("#busy_pareto").show();
      var new_select ="";
      for (var iter in moes_info_json){
        var param = moes_info_json[iter];
        if (param.type == "moes_parameter")
          new_select = new_select + "<option value='"+escapeHtml(param.id)+"'>"+escapeHtml(param.label)+"</option> ";
      }

      /* replace old values with new ones (moes) */
      $(".moe_info_list").each(function(){
        selected_option = $(this).find(":selected").val();
        $(this).html(new_select);
        $(this).find("option").filter(function(){
          return $(this).val() == selected_option
        }).attr('selected', true)
      });
      $('#busy_pareto').hide();
      toastr.success("Moes refreshed");
    };
    reload_pareto_params();

    var pareto_chart_counter = 0;
    var load_chart = function() {
      var pareto_chart_div = $("<div id=\"pareto_chart_"+pareto_chart_counter+"\">")[0];
      $("#paretoModal .charts").prepend(pareto_chart_div);

      var outputParam = $("#paretoModal select#outputParam option:selected").val();
      var index_of_moe = window.moes_info.moes_names.indexOf(outputParam)
      var type_of_moe = window.moes_info.moes_types[index_of_moe]
      outputParam = escapeHtml(outputParam);

      if (type_of_moe == 'string') {
        toastr.error('Cannot plot for string type parameter - ' + outputParam);
        $("#busy_pareto").hide()
        return;
      }
      
      var query_params = "experiment_id=#{@experiment.id}";
      query_params += "&output="+outputParam;
      query_params += "&chart_id="+pareto_chart_counter;

      var url = "#{@prefix}/chart_instances/pareto?"+query_params;

      var handler = function(data) {
        $("#busy_pareto").hide();
        var targetOffset = $(pareto_chart_div).offset().top;
        $('html,body').animate({ scrollTop: targetOffset }, 1000);
        $(pareto_chart_div).html(data);
      };
      getWithSession(url, {}, handler, onErrorHandler);
      pareto_chart_counter++;

    };

    $("#paretoModal").find("button.refresh").bind("click", reload_pareto_params);

    $("#paretoModal").find("button.radius").bind("click", function() {
      $('#busy_pareto').show();
      load_chart();
      });

  });

