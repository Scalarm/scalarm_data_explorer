- parameters = @experiment.get_parameter_ids
-# parameters = %w(a b)
- parameters_labels = parameters
- filter = {is_done: true, is_error: {'$exists'=> false}}
- fields = {fields: {result: 1}}
- result = @experiment.simulation_runs.where(filter, fields).first
- count_of_cluster = [2,3,4,5,6,7,8,9,10,11,12]
- outputs=[]
- if result.blank?
  - outputs = ["No results found in completed simulation runs"]
- else
  - outputs = result.result.keys

=define_helper_functions

#kmeansModal.reveal-modal(data-reveal="true")
  %section#kmeans_charts_form.panel.radius.analysis-chart
    %a.close-reveal-modal &#215
    %h3.subheader="K-means clustering"
    %h3 #{}
    .row
      .small-5.columns
        %label.inline="Select number of clusters"
      .small-7.columns
        %select.numbClust
          -count_of_cluster.each do |output|
            %option{:value => output}=output
    .row
      .small-5.columns
        %label.inline="Select number of subclusters"
      .small-7.columns
        %select.numbSubclust
          -count_of_cluster.each do |output|
            %option{:value => output}=output
    .row
      -if result.blank?
        %label.inline #{outputs.to_sentence}
      -else
        %label.inline="Select parameters of clustering:"
        .moes_infos
          -outputs.each do |output|
            %span.small-2.columns.end
              %label
                %input{:type => "checkbox", :style => "margin-right:5px;", :id => "#{output}"}
                #{output}


    .row
      %ul.inline-list
        %li
          %button.radius.check_all#check Check / Uncheck all
      %ul.inline-list
        %li
          %button.refresh Refresh moes
        %li
          %button.radius.load Load chart
        %li
          %a
            %img(src="#{image_url("loading.gif")}" class="loading_chart_gif" id='busy_kmeans' size='16x16' style='display: none' )


  .charts
    .scripts

#clusterInfo.reveal-modal(data-reveal="")

:javascript
  $(function(){
    $('#kmeansModal').foundation('reveal', 'close');
    var scripts_loaded = false;
    var chart_counter = 0;
    var load_chart = function() {
      var chart_div = $("<div id=\"kmeans_chart_"+chart_counter+"\">")[0];
      $("#kmeansModal .charts").prepend(chart_div);
      var selectedFiles =
        $('#kmeansModal').find('input:checked').map(function () {
            return $(this).attr('id')
        });
      var selected_parameters = selectedFiles.toArray();

      for (i = 1; i <= selected_parameters.length; i++) {
        escapeHtml(selected_parameters[i-1].trim())
        if (type_of_parameter(selected_parameters[i-1].trim()) == 'string') {
          toastr.error('Cannot plot for string type parameter - ' + selected_parameters[i-1].trim());
          $("#busy_kmeans").hide();
          return;
        }
      }

      var numb_cluster = $("#kmeansModal .numbClust option:selected").val();
      var numb_subcluster = $("#kmeansModal .numbSubclust option:selected").val();
      var array = $("#kmeansModal select#moes_name option:selected").val();
      var query_params = "experiment_id=#{@experiment.id}";
      query_params += "&chart_id="+chart_counter;
      query_params += "&clusters="+numb_cluster;
      query_params += "&subclusters="+numb_subcluster;

      var url = "#{@prefix}/chart_instances/k_means?"+query_params;
      var handler = function(data) {
        $("#busy_kmeans").hide();
        var targetOffset = $(chart_div).offset().top;
        $('html,body').animate({ scrollTop: targetOffset }, 1000);
        $(chart_div).html(data);
      };
      getWithSession(url, {array: selected_parameters, chart_id: chart_counter, experiment_id: "#{@experiment.id.to_s}", base_url: "#{@prefix}"}, handler, onErrorHandler);
      chart_counter++;
    };

   $("#kmeansModal").find("button.refresh").bind("click", function() {
      $('#busy_kmeans').show();
      var new_checkbox ="";
      for (var iter in moes_info_json){
        var param = moes_info_json[iter];
        if (param.type == "moes_parameter")
          new_checkbox = new_checkbox + "<span class='small-2 columns end'><label><input id='"+ param.id +"' style='margin-right:5px;' type='checkbox'>"+param.label+"</label></span> ";
      }
      $(" .moes_infos").each(function(){
        $(this).html(new_checkbox);
      });
      $('#busy_kmeans').hide();
      toastr.success("Moes refreshed");
    });

    $("#kmeansModal").find("button.radius.load").bind("click", function() {
      if ($('input:checked').length == 0) toastr.error("Select moes and click Load chart.");
      else {
        $("#busy_kmeans").show();
        if(!scripts_loaded) {
          var url = "#{@prefix}/script_tags/k_means?base_url=" + encodeURIComponent("#{@prefix}");
          var handler = function(data) {
            scripts_loaded = true;
            $("#kmeansModal").find(".scripts").html(data);
            load_chart();
          };
          getWithSession(url, {}, handler);
        }
        else
          load_chart();
      }
    });

    $("#kmeansModal button.radius.check_all#check").on('click', function () {
      if ($("#kmeansModal input:checkbox").length ==  $("#kmeansModal input:checked").length) {
        $("#kmeansModal input:checkbox").prop('checked', false);
      }
      else $("#kmeansModal input:checkbox").prop('checked', true);
    });

    function type_of_parameter(parameter) {
      var index_of_moe = window.moes_info.moes_names.indexOf(parameter);
      return window.moes_info.moes_types[index_of_moe];
    }

  });